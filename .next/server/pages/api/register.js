"use strict";(()=>{var e={};e.id=4088,e.ids=[4088],e.modules={74729:e=>{e.exports=require("bcryptjs")},56037:e=>{e.exports=require("mongoose")},75600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},96762:(e,r)=>{Object.defineProperty(r,"M",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},4973:(e,r,t)=>{t.r(r),t.d(r,{config:()=>q,default:()=>A,routeModule:()=>b});var n={};t.r(n),t.d(n,{default:()=>S});var i=t(89947),o=t(2706),a=t(96762),s=t(93307),d=t(42284),u=t.n(d),c=t(74729),l=t.n(c);let p=require("crypto");var f=t.n(p);let g=require("nodemailer");var m=t.n(g);let y=require("node-schedule");var h=t.n(y),P=t(19774);async function S(e,r){r.setHeader("Content-Type","application/json");try{if("POST"!==e.method)return r.status(405).json({error:"Method Not Allowed"});let{title:t,first_name:n,surname:i,gender:o,birth_date:a,email:d,phoneNumber:c,country:p,city:g,address:y,password:h,role:S,termsAccepted:v,practice_name:A,practice:q}=e.body;console.log("Full Request Body:",e.body),console.log("Extracted practice_data:",A);let b=await P.A.find({name:A});if(!b)return r.status(400).json({error:"Practice not found or invalid practice ID."});let M=await l().hash(h,10);await (0,s.A)();let E=Math.floor(1e5+9e5*Math.random()).toString(),_=f().randomBytes(32).toString("hex"),w=new Date;w.setMinutes(w.getMinutes()+2);let j=await u().create({practice:b?q:null,title:t,first_name:n,surname:i,gender:o,birth_date:a,email:d,phoneNumber:c,country:p,city:g,address:y,password:M,role:S,termsAccepted:v,verificationCode:E,verificationToken:_,expirationTime:w,isVerified:!1});console.log(j);let x=m().createTransport({host:"smtppro.zoho.eu",port:465,secure:!0,auth:{user:process.env.EMAIL,pass:process.env.PASSWORD},tls:{rejectUnauthorized:!1}}),I={from:process.env.EMAIL,to:d,subject:"Hestia - Med Email Verification",html:`<h1>Hi ${n}!</h1><br><p>Type in the following code to verify your account: <strong>${E}</strong></p>`};try{let e=await x.sendMail(I);if(e.accepted&&e.accepted.length>0)return console.log("Verification email sent successfully."),r.status(200).json({success:!0,verificationToken:_});return console.error("Failed to send verification email."),r.status(500).json({success:!1,error:"Failed to send verification email."})}catch(e){return console.error("Error sending email:",e),r.status(500).json({success:!1,error:"Error sending email."})}}catch(e){return console.error("Error during registration process:",e),r.status(500).json({error:"Internal Server Error",details:e.message})}}let v=async()=>{let e=new Date;try{let r=await u().find({expirationTime:{$lt:e},isVerified:!1}),t=await u().deleteMany({_id:{$in:r.map(e=>e._id)}});console.log(`${t.deletedCount} expired users have been deleted.`)}catch(e){console.error("Error deleting expired users:",e)}};h().scheduleJob("*/2 * * * *",v);let A=(0,a.M)(n,"default"),q=(0,a.M)(n,"config"),b=new i.PagesAPIRouteModule({definition:{kind:o.A.PAGES_API,page:"/api/register",pathname:"/api/register",bundlePath:"",filename:""},userland:n})},93307:(e,r,t)=>{t.d(r,{A:()=>o});var n=t(56037),i=t.n(n);let o=async()=>{try{await i().connect(process.env.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("Erfolgreich mit der MongoDB-Datenbank verbunden.")}catch(e){throw console.error(`Fehler beim Verbinden mit der MongoDB-Datenbank: ${e.message}`),console.error("Stack-Trace: ",e.stack),Error("Verbindung zur MongoDB fehlgeschlagen.")}}},19774:(e,r,t)=>{t.d(r,{A:()=>a});var n=t(56037),i=t.n(n);let o=new(i()).Schema({name:{type:String,required:!0,unique:!0},practice_address:{type:String,required:!0},practice_phoneNumber:{type:String,required:!0},appointments:{type:[i().Schema.Types.ObjectId],ref:"Appointment",default:[]}}),a=i().models.Practice||i().model("Practice",o)},42284:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0});let n=t(96797)._(t(56037)),i=new n.default.Schema({practice:{type:n.default.Schema.Types.ObjectId,ref:"Practice",required:!0},title:{type:String,required:!1},first_name:{type:String,required:!0},surname:{type:String,required:!0},birth_date:{type:Date,required:!0},gender:{type:String,required:!0},email:{type:String,required:!0,unique:!0,match:[/.+\@.+\..+/,"Please provide a valid email address."]},phoneNumber:{type:String,required:!0},country:{type:String,required:!0},city:{type:String,required:!0},address:{type:String,required:!0},password:{type:String,required:!0},role:{type:String,required:!0,enum:["practitioner","nurse","administration"]},verificationCode:String,verificationToken:String,expirationTime:Date,isVerified:{type:Boolean,default:!1},termsAccepted:{type:Boolean,required:!0,default:!1}},{timestamps:!0}),o=n.default.models.User||n.default.model("User",i);e.exports=o},2706:(e,r)=>{Object.defineProperty(r,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},89947:(e,r,t)=>{e.exports=t(75600)},96797:(e,r)=>{r._=function(e){return e&&e.__esModule?e:{default:e}}}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=4973);module.exports=t})();