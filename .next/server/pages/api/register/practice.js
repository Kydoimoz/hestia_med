"use strict";(()=>{var e={};e.id=1824,e.ids=[1824],e.modules={56037:e=>{e.exports=require("mongoose")},75600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},96762:(e,r)=>{Object.defineProperty(r,"M",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},47692:(e,r,t)=>{t.r(r),t.d(r,{config:()=>d,default:()=>l,routeModule:()=>p});var n={};t.r(n),t.d(n,{default:()=>u});var o=t(89947),i=t(2706),a=t(96762),s=t(93307),c=t(19774);async function u(e,r){if("POST"!==e.method)return r.status(405).json({message:"Method Not Allowed"});try{await (0,s.A)();let{practice_name:t,practice_address:n,practice_phoneNumber:o}=e.body;console.log(t,n,o);let i=await c.A.findOne({name:t});if(console.log(i),i)return console.log("Praxis existiert bereits"),r.status(400).json({message:"Praxis existiert bereits"});return i=new c.A({name:t,practice_address:n,practice_phoneNumber:o}),console.log("Daten zum Speichern:",i),await i.save(),r.status(201).json({_practice:i})}catch(e){return console.error("Fehler beim Erstellen der Praxis:",e),r.status(500).json({message:"Fehler beim Erstellen der Praxis"})}}let l=(0,a.M)(n,"default"),d=(0,a.M)(n,"config"),p=new o.PagesAPIRouteModule({definition:{kind:i.A.PAGES_API,page:"/api/register/practice",pathname:"/api/register/practice",bundlePath:"",filename:""},userland:n})},93307:(e,r,t)=>{t.d(r,{A:()=>i});var n=t(56037),o=t.n(n);let i=async()=>{try{await o().connect(process.env.MONGODB_URI,{useNewUrlParser:!0,useUnifiedTopology:!0}),console.log("Erfolgreich mit der MongoDB-Datenbank verbunden.")}catch(e){throw console.error(`Fehler beim Verbinden mit der MongoDB-Datenbank: ${e.message}`),console.error("Stack-Trace: ",e.stack),Error("Verbindung zur MongoDB fehlgeschlagen.")}}},19774:(e,r,t)=>{t.d(r,{A:()=>a});var n=t(56037),o=t.n(n);let i=new(o()).Schema({name:{type:String,required:!0,unique:!0},practice_address:{type:String,required:!0},practice_phoneNumber:{type:String,required:!0},appointments:{type:[o().Schema.Types.ObjectId],ref:"Appointment",default:[]}}),a=o().models.Practice||o().model("Practice",i)},2706:(e,r)=>{Object.defineProperty(r,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},89947:(e,r,t)=>{e.exports=t(75600)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=47692);module.exports=t})();