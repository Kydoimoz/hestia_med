(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[727],{57544:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/appointment",function(){return n(65985)}])},65985:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>T});var a=n(74848),i=n(13368),s=n.n(i);n(86134),n(10027),n(84899),n(36951),n(25693),n(95756),n(33803),n(18171),n(26584),n(43614);var o=n(96540),r=n(73909),l=n(95093),d=n.n(l),c=n(86715);n(77853);var p=n(95562),m=n.n(p),u=n(33013);d().locale("de");let h=(0,r.ye)(d()),v={week:"Woche",day:"Tag",previous:"Zur\xfcck",next:"Weiter",today:"Heute",agenda:"Agenda",showMore:e=>"+".concat(e," mehr")};function _(){var e;let t=(0,c.useRouter)(),{data:n}=(0,u.useSession)(),i=null==n?void 0:null===(e=n.user)||void 0===e?void 0:e.practice,[s,l]=(0,o.useState)(),{id:p}=t.query,[_,T]=(0,o.useState)([{id:1,title:"Max Mustermann - Untersuchung",start:new Date(2025,0,7,10,0),end:new Date(2025,0,7,10,30),patient:"Max Mustermann",purpose:"Untersuchung"},{id:2,title:"Anna M\xfcller - Nachuntersuchung",start:new Date(2025,0,8,14,0),end:new Date(2025,0,8,14,30),patient:"Anna M\xfcller",purpose:"Nachuntersuchung"}]),[j,w]=(0,o.useState)(!1),[x,g]=(0,o.useState)(!1),[f,b]=(0,o.useState)(null),[y,C]=(0,o.useState)({}),[I,N]=(0,o.useState)(!1),[S,k]=(0,o.useState)(),[D,A]=(0,o.useState)({patientId:"",startTime:"",endTime:"",purpose:""});(0,o.useEffect)(()=>{let e=!0;return(async()=>{if(e)try{let e=await fetch("/api/appointment",{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw Error("Fehler beim Laden der Termine");let t=await e.json();if(!t.appointments||!Array.isArray(t.appointments))throw Error("Unerwartetes Format der API-Daten");console.log("API Antwort:",t.appointments);let n=t.appointments.map(e=>{var t,n;return{id:e._id,title:"".concat((null===(t=e.patientId)||void 0===t?void 0:t.full_name)||"Unbekannt"," - ").concat(e.purpose),start:new Date(e.startTime),end:new Date(e.endTime),patient:(null===(n=e.patientId)||void 0===n?void 0:n.full_name)||"Unbekannt",purpose:e.purpose,patientId:e.patientId}});console.log("Formatierte Events:",n),T(n)}catch(e){console.error("Fehler beim Laden der Termine:",e.message),l(e.message)}finally{N(!1)}})(),()=>{e=!1}},[]);let[E,F]=(0,o.useState)([]),B=async()=>{try{let e=await fetch("/api/GET/patients?practice_id=".concat(i),{method:"GET",headers:{"Content-Type":"application/json"}}),t=await e.json();console.log("PATIENT DATA ",t),F(t)}catch(e){console.error("Fehler beim Abrufen der Patienten:",e)}};(0,o.useEffect)(()=>{B()},[p]);let M=e=>{C(e),console.log("Event selected:",e),console.log("Patient ID:",e.patientId),g(!0)},P=e=>{let{name:t,value:n}=e.target;A({...D,[t]:n})},O=()=>{w(!1),b(null),A({patientId:"",startTime:"",endTime:"",purpose:""})},H=()=>{g(!1),C(null)},L=async()=>{try{var e;console.log("FormData vor dem Senden:",D);let t={patientId:D.patientId,startTime:new Date(D.startTime).toISOString(),endTime:new Date(D.endTime).toISOString(),purpose:D.purpose.trim()};console.log("Body vor dem Senden an die API:",t);let n=await fetch("/api/appointment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!n.ok){let e=await n.json();throw console.error("Fehlerdetails von der API:",e),Error(e.message||"Fehler beim Speichern des Termins")}let{appointment:a}=await n.json();T([..._,{patientId:null===(e=D.patientId)||void 0===e?void 0:e._id,id:a._id||Date.now(),title:"".concat(D.patientId," - ").concat(D.purpose),startTime:new Date(D.startTime),endTime:new Date(D.endTime),patient:D.patientId,purpose:D.purpose}]),O(),window.location.reload()}catch(e){console.error("Fehler beim Speichern des Termins:",e.message)}},Y=e=>{T(_.filter(t=>t.id!==e)),H()};return(0,a.jsxs)("div",{className:"".concat(m().divContainer),children:[(0,a.jsx)(r.Vv,{localizer:h,events:_,startAccessor:"start",endAccessor:"end",messages:v,views:["week","day"],defaultView:"week",selectable:!0,onSelectSlot:e=>{e&&(b(e),A({...D,startTime:d()(e.start).format("YYYY-MM-DDTHH:mm"),endTime:d()(e.end).format("YYYY-MM-DDTHH:mm")}),w(!0))},onSelectEvent:e=>M(e),min:new Date(0,0,0,8),max:new Date(0,0,0,18)}),j&&(0,a.jsx)("div",{className:m().modalOverlay,children:(0,a.jsxs)("div",{className:m().modalContainer,children:[(0,a.jsx)("h2",{children:"Termin erstellen"}),(0,a.jsx)("label",{children:"Patient:"}),(0,a.jsxs)("select",{name:"patientId",value:D.patientId,onChange:P,className:m().inputField,children:[(0,a.jsx)("option",{value:"",children:"Bitte w\xe4hlen"}),E.map(e=>(0,a.jsx)("option",{onClick:()=>A({...D,patientId:e._id}),value:e._id,children:e.full_name},e._id))]}),(0,a.jsx)("label",{children:"Anfangszeit:"}),(0,a.jsx)("input",{type:"datetime-local",name:"startTime",value:D.startTime,onChange:P,className:m().inputField}),(0,a.jsx)("label",{children:"Endzeit:"}),(0,a.jsx)("input",{type:"datetime-local",name:"endTime",value:D.endTime,onChange:P,className:m().inputField}),(0,a.jsx)("label",{children:"Zweck des Termins:"}),(0,a.jsx)("input",{type:"text",name:"purpose",value:D.purpose,onChange:P,className:m().inputField}),(0,a.jsxs)("div",{className:m().buttonContainer,children:[(0,a.jsx)("button",{onClick:O,className:m().cancelButton,children:"Abbrechen"}),(0,a.jsx)("button",{onClick:L,className:m().saveButton,children:"Termin speichern"})]})]})}),x&&y&&(0,a.jsx)("div",{className:m().modalOverlay,children:(0,a.jsxs)("div",{className:m().modalContainer,children:[(0,a.jsx)("h2",{children:"Termindetails"}),(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"Patient:"})," ",y.patient]}),(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"Von:"})," ",d()(y.startTime).format("LLLL")]}),(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"Bis:"})," ",d()(y.endTime).format("LLLL")]}),(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"Zweck:"})," ",y.purpose]}),(0,a.jsxs)("div",{className:m().buttonContainer,children:[(0,a.jsx)("button",{onClick:()=>{var e;return t.push("/patient/".concat(null===(e=y.patientId)||void 0===e?void 0:e._id))},className:m().viewButton,children:"Zum Patienten"}),(0,a.jsx)("button",{onClick:()=>Y(y.id),className:m().deleteButton,children:"L\xf6schen"}),(0,a.jsx)("button",{onClick:H,className:m().cancelButton,children:"Schlie\xdfen"})]})]})})]})}function T(){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s(),{children:[(0,a.jsx)("title",{children:"Hestia - Med\xae | Bridging Technology and Care for a Healthier Tomorrow."}),(0,a.jsx)("meta",{name:"description",content:"created by Hestia - Med"}),(0,a.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),(0,a.jsx)(_,{})]})}},95562:e=>{e.exports={divContainer:"appointments_divContainer__qoHqZ",modalOverlay:"appointments_modalOverlay__gBp2d",modalContainer:"appointments_modalContainer__ngsbk",modalHeader:"appointments_modalHeader__IJk_l",inputField:"appointments_inputField___Zr1h",buttonContainer:"appointments_buttonContainer__OD2K7",cancelButton:"appointments_cancelButton__NiogS",saveButton:"appointments_saveButton__crOZi",calendarRow:"appointments_calendarRow__UUcR9",eventContent:"appointments_eventContent__RhBtr"}}},e=>{var t=t=>e(e.s=t);e.O(0,[438,624,563,54,197,763,255,57,821,108,636,593,792],()=>t(57544)),_N_E=e.O()}]);